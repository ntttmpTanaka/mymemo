using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Runtime.Serialization.Json;
using System.IO;

namespace wpfJsonApiF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public string confFname = @"E:\workbench\wpfJsonApiF\def.json";

        public MainWindow()
        {
            InitializeComponent();

            // 画面表示エンジン
            init();
        }
        /**
        * 初期処理
        */
        public void init(){
            Dictionary<string, string> map = init_conf();
            foreach (KeyValuePair<string, string> kvp in map)
            {
                sp.Children.Add(creatLine(kvp.Value));
            }
        }
        /**
        * 設定ファイルの読み込みを実施する
        */
        public Dictionary<string, string> init_conf(){
            JsonFactory jf = new JsonFactory();
            Dictionary<string, string> map = jf.json2map(fRead(confFname));
            return map;
        }
        /**
        * ファイル読み込み
        */
        public string fRead(string fname){
            string str = "";
            using(StreamReader sr = new StreamReader(fname)) {
                str = sr.ReadToEnd();
            }
            return str;
        }
        /**
        * 画面表示エンジン
        */
        private Grid creatLine(string name){
            var grid = new Grid();

            ColumnDefinition col = new ColumnDefinition();
            col.Width = new GridLength(100);
            grid.ColumnDefinitions.Add(col);
            ColumnDefinition col2 = new ColumnDefinition();
            col2.Width = new GridLength(100);
            grid.ColumnDefinitions.Add(col2);

            var label = creatLabel(name);
            Grid.SetColumn(label,0);
            grid.Children.Add(label);

            var tbox = creatTextBox(name + "tbox");
            Grid.SetColumn(tbox,1);
            grid.Children.Add(tbox);

            return grid;
        }
        public Label creatLabel(string name){
            var label = new Label();
            label.Content = name;
            return label;
        }
        public TextBox creatTextBox(string name){
            var tbox = new TextBox();
            tbox.Name = name + "tbox";
            tbox.Height = 20;
            tbox.Width = 90;
            return tbox;
        }
        private void loginfunc(object sender, RoutedEventArgs e)
        {
            MessageBox.Show("Click");
         
        }
    }
}
